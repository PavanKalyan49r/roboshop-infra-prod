pipeline {
    agent {
        node{
            label 'AGENT-1'
        }
    }
    
    options{
        ansiColor('xtrem')
    //     timeout(time:1, unit: 'SECONDS')
    //     disableConcurrentBuilds()
    }
    parameters{
                choice(name: 'action', choices: ['apply', 'destroy'], description: 'Pick something')

    }
// build
    stages {
        stage('init') {
            steps {
                sh """
                   cd 01-vpc
                   terraform init -reconfigure
                """
            }
        }
        stage('PLAN') {
            steps {
                sh """
                   cd 01-vpc
                   terraform plan
                """
            }
        }
        stage('APPLY') {
            when{
               expression{ 
                params.action== 'apply'
                }
            }
            input {
                message "should we continue?"
                ok "yes, we should"
                // submitter "alice,bob"
                // parameters{
                //     string(name: 'PERSON', defaultValue: 'Mr Jenkins', description)
                // }
            }
            steps {
                sh """
                   cd 01-vpc
                   terraform apply -auto-approve
                """
            }
        }
       stage('DESTROY') {
            when{
               expression{ 
                params.action== 'destroy'
                }
            }
            input {
                message "should we continue?"
                ok "yes, we should"
                // submitter "alice,bob"
                // parameters{
                //     string(name: 'PERSON', defaultValue: 'Mr Jenkins', description)
                // }
            }
            steps {
                sh """
                   cd 01-vpc
                   terraform destroy -auto-approve
                """
            }
        }
    }
    //post build
    post {
        always{
            echo 'i will always say hello again'
        }
        failure{
            echo 'this runs when pipeline is failed, used generally to send some alrets'
        }
        success{
            echo 'i will say hello when pipeline is success'
        }
    }
}